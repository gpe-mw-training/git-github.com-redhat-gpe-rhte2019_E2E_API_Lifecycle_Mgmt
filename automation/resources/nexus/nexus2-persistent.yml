kind: List
apiVersion: v1
items:
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: {{ app_name }}
    name: {{ app_name }}
  spec:
    port:
      targetPort: 8081-tcp
    to:
      kind: Service
      name: {{ app_name }}
      weight: 100
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: {{ app_name }}
    name: {{ app_name }}
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      deploymentconfig: {{ app_name }}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: {{ app_name }}
    name: {{ app_name }}
  spec:
    replicas: 1
    selector:
      matchLabels:
        deploymentconfig: {{ app_name }}
    template:
      metadata:
        labels:
          deploymentconfig: {{ app_name }}
      spec:
        containers:
        - env:
          - name: CONTEXT_PATH
            value: /
          image: docker.io/sonatype/nexus:{{ nexus_version }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: {{ app_name }}
          ports:
          - containerPort: 8081
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /content/groups/public/
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: {{ nexus_max_memory }}
              cpu: {{ nexus_max_cpu }}
            requests:
              memory: 500Mi
              cpu: 250m
          restartPolicy: Always
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /sonatype-work
            name: nexus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: nexus-data
          persistentVolumeClaim:
            claimName: {{ nexus_pvc_name }}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: {{ app_name }}
    name: {{ nexus_pvc_name }}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ nexus_pv_capacity }}
